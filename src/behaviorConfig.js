// WARNING: DO NOT EDIT THIS FILE, IT IS AUTOGENERATED
module.exports = {
  addonType: "behavior",
  id: "mikal_rotate_shape",
  name: "rotate_shape",
  version: "1.1.0",
  category:
    "movements",
  author: "mikal",
  website: "https://www.construct.net",
  documentation: "https://www.construct.net",
  description: "Visual 3D rotation of objects",
  // icon: "icon.svg", // defaults to "icon.svg" if omitted
  // addonUrl: "https://www.construct.net/en/make-games/addons/####/XXXX", // displayed in auto-generated docs
  // githubUrl: "https://github.com/skymen/XXXX", // displays latest release version in auto-generated docs
  fileDependencies: [
  ],
  info: {
    Set: {
      IsOnlyOneAllowed: false,
      CanBeBundled: false,
      IsDeprecated: false,
    },
  },
  properties: [
  ],
  aceCategories: {
    general: "General",
  },
  Acts: {
    SetRotationAngles: {
      // The category of the action as it appears in the add action dialog
      category: "general",
      forward: "_SetRotationAngles",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isAsync: false,
      params: [
        {
          id: "angle-x",
          name: "Angle x",
          desc: "X axis angle",
          type: "number",
          value: 0,
        },
        {
          id: "angle-y",
          name: "Angle y",
          desc: "Y axis angle",
          type: "number",
          value: 0,
        },
        {
          id: "angle-z",
          name: "Angle z",
          desc: "Z axis angle",
          type: "number",
          value: 0,
        },
      ],
      listName: "Set rotation angles",
      displayText: "{my}: Set rotation angles [i]{0}, {1}, {2}[/i]",
      description: "Set rotation angles",
    },
    // Create a new action for Setting Center Offset
    SetCenterOffset: {
      // The category of the action as it appears in the add action dialog
      category: "general",
      forward: "_SetCenterOffset",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isAsync: false,
      params: [
        {
          id: "offset-x",
          name: "Offset x",
          desc: "X center offset",
          type: "number",
          value: 0,
        },
        {
          id: "offset-y",
          name: "Offset y",
          desc: "Y center offset",
          type: "number",
          value: 0,
        },
        {
          id: "offset-z",
          name: "Offset z",
          desc: "Z center offset",
          type: "number",
          value: 0,
        },
      ],
      listName: "Set center offset",
      displayText: "{my}: Set center offset [i]{0}, {1}, {2}[/i]",
      description: "Set center offset",
    }
  },
  Cnds: {
  },
  Exps: {
    AngleX: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_AngleX",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the X world axis angle",
    },
    AngleY: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_AngleY",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the Y world axis angle",
    },
    AngleZ: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_AngleZ",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the Z world axis angle",
    },
    OffsetX: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_OffsetX",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the X center offset",
    },
    OffsetY: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_OffsetY",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the Y center offset",
    },
    OffsetZ: {
      // The category of the action as it appears in the expression picker
      category: "general",
      forward: "_OffsetZ",
      autoScriptInterface: true,
      highlight: true,
      deprecated: false,
      isVariadicParameters: false,
      returnType: "number",
      params: [],
      description: "Get the Z center offset",
    },
    /*
    SampleExpression: {
      // The category of the action as it appears in the expression picker
      category: "general",

      // Forward to the instance function name
      forward: "_SampleAction",
      // Or specify a handler function
      handler: `function () {
        // Your code here
      }`,

      // Set to true to automatically generate a script interface for this expression
      // Cases where you might not want this are:
      // 1- If you don't want it to appear in the script interface
      // 2- If the script interface has a better way to achieve the same thing
      autoScriptInterface: true,

      // Set to true to highlight the expression in the expression picker
      highlight: true,

      // Set to true to hide the expression in the interface. False by default if not specified.
      deprecated: false,

      // The type of the expression.
      returnType:
        - "string"
        - "number"
        - "any" // must be either string or number

      // Set to true if the expression is variadic. False by default if not specified.
      isVariadicParameters: false

      // list of parameters
      params: [
        {
          // The id of the parameter. This is used to generate the script interface.
          // It must be unique for each parameter.
          id: "param1",
          // The name of the parameter.
          name: "Param 1",
          // The description of the parameter.
          desc: "The first parameter",

          // The type of the parameter.
          type:
            // The following types can take a default value AND be automatically generated in the script interface
            - "string"
            - "number"
            - "any"
        },
      ],

      // The description of the expression as it appears in the expression picker
      description: "This is a sample expression",
    },
    */
  },
};
